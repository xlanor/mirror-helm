apiVersion: batch/v1
kind: Job
metadata:
  name: mirror-pv-cleanup
  namespace: {{ .Values.global.namespace }}
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "-1"
spec:
  backoffLimit: 2  # Allow some retries
  ttlSecondsAfterFinished: 300  # Keep logs around longer
  template:
    spec:
      serviceAccountName: {{ .Values.global.serviceAccount.name }}
      nodeSelector:
        node-role.kubernetes.io/master: "true"
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: kubectl
        image: bitnami/kubectl:1.32
        command:
        - /bin/sh
        args:
        - -c
        - |
          set -x  # Enable command printing
          echo "Starting PV cleanup job..."
          
          {{- range .Values.jobs.jobSpecific }}
          PV_NAME="{{ .name }}-pv"
          echo "Checking PV: $PV_NAME"
          
          if kubectl get pv $PV_NAME --ignore-not-found=true | grep -q "$PV_NAME"; then
            echo "Found PV $PV_NAME, removing claimRef..."
            kubectl patch pv $PV_NAME -p '{"spec":{"claimRef": null}}' || {
              echo "Failed to patch PV $PV_NAME"
              exit 1
            }
            echo "Successfully patched PV $PV_NAME"
          else
            echo "PV $PV_NAME not found, skipping"
          fi
          {{- end }}
          
          echo "PV cleanup job completed"
        livenessProbe: null
        readinessProbe: null
      restartPolicy: Never